name: Build and Release Equipment Tracker

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Determine solution directory
      id: paths
      shell: pwsh
      run: |
        $sol = Join-Path $PWD 'EquipmentTracker/EquipmentTracker.sln'
        $proj = Join-Path $PWD 'EquipmentTracker/EquipmentTracker.csproj'
        echo "solution=$sol" >> $env:GITHUB_OUTPUT
        echo "project=$proj" >> $env:GITHUB_OUTPUT
        echo "workdir=$PWD" >> $env:GITHUB_OUTPUT

    - name: NuGet restore (solution)
      run: nuget restore "${{ steps.paths.outputs.solution }}" -PackagesDirectory packages

    - name: MSBuild restore (fallback)
      run: msbuild "${{ steps.paths.outputs.solution }}" /t:Restore /p:RestorePackagesConfig=true /p:SolutionDir="${{ steps.paths.outputs.workdir }}\\"

    - name: Build application (solution)
      run: msbuild "${{ steps.paths.outputs.solution }}" /t:Build /p:Configuration=Release /p:Platform="Any CPU"

    - name: Verify build output
      shell: pwsh
      run: |
        $exe = "EquipmentTracker\bin\Release\EquipmentTracker.exe"
        if (-not (Test-Path $exe)) { Write-Error "Missing exe: $exe" }

    - name: Create release directory
      run: |
        mkdir release
        mkdir release/EquipmentTracker

    - name: Copy application files
      run: |
        Copy-Item "EquipmentTracker/bin/Release/EquipmentTracker.exe" "release/EquipmentTracker/"
        Copy-Item "EquipmentTracker/bin/Release/EquipmentTracker.exe.config" "release/EquipmentTracker/" -ErrorAction SilentlyContinue
        Copy-Item "EquipmentTracker/bin/Release/*.dll" "release/EquipmentTracker/" -ErrorAction SilentlyContinue
        Copy-Item "EquipmentTracker/bin/Release/*.pdb" "release/EquipmentTracker/" -ErrorAction SilentlyContinue

    - name: Fallback copy SQLite native binaries
      shell: pwsh
      run: |
        $pkgRoots = @(
          (Join-Path $PWD 'packages'),
          "$env:USERPROFILE\.nuget",
          "$env:LOCALAPPDATA\NuGet"
        )
        foreach ($root in $pkgRoots) {
          if (Test-Path $root) {
            $sqlite = Get-ChildItem -Recurse -Directory $root -ErrorAction SilentlyContinue | Where-Object { $_.Name -like 'Stub.System.Data.SQLite.Core.NetFramework*' } | Select-Object -First 1
            if ($sqlite) {
              Copy-Item -Recurse "$($sqlite.FullName)\**\*.dll" "release\EquipmentTracker\" -ErrorAction SilentlyContinue
              break
            }
          }
        }

    - name: Copy documentation
      run: |
        Copy-Item "README.md" "release/EquipmentTracker/"
        Copy-Item "LICENSE" "release/EquipmentTracker/"
        Copy-Item "CHANGELOG.md" "release/EquipmentTracker/"

    - name: Create installation script
      run: |
        $script = @'
        @echo off
        echo Equipment Tracker Installation
        echo ==============================
        echo.
        echo This will install Equipment Tracker to: %PROGRAMFILES%\EquipmentTracker
        echo.
        pause
        
        if not exist "%PROGRAMFILES%\EquipmentTracker" mkdir "%PROGRAMFILES%\EquipmentTracker"
        
        echo Copying files...
        copy /Y "EquipmentTracker.exe" "%PROGRAMFILES%\EquipmentTracker\"
        copy /Y "*.dll" "%PROGRAMFILES%\EquipmentTracker\" >nul 2>&1
        copy /Y "*.config" "%PROGRAMFILES%\EquipmentTracker\" >nul 2>&1
        copy /Y "README.md" "%PROGRAMFILES%\EquipmentTracker\" >nul 2>&1
        copy /Y "LICENSE" "%PROGRAMFILES%\EquipmentTracker\" >nul 2>&1
        
        echo.
        echo Creating desktop shortcut...
        powershell -Command "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%USERPROFILE%\Desktop\Equipment Tracker.lnk'); $Shortcut.TargetPath = '%PROGRAMFILES%\EquipmentTracker\EquipmentTracker.exe'; $Shortcut.Save()"
        
        echo.
        echo Installation complete!
        echo You can now run Equipment Tracker from your desktop or start menu.
        echo.
        pause
        '@
        $script | Out-File -FilePath "release/EquipmentTracker/INSTALL.bat" -Encoding ASCII

    - name: Create uninstall script
      run: |
        $script = @'
        @echo off
        echo Equipment Tracker Uninstallation
        echo =================================
        echo.
        echo This will remove Equipment Tracker from your system.
        echo Your data files will be preserved in: %USERPROFILE%\Documents\EquipmentTracker
        echo.
        pause
        
        echo Removing application files...
        if exist "%PROGRAMFILES%\EquipmentTracker" rmdir /S /Q "%PROGRAMFILES%\EquipmentTracker"
        
        echo Removing desktop shortcut...
        if exist "%USERPROFILE%\Desktop\Equipment Tracker.lnk" del "%USERPROFILE%\Desktop\Equipment Tracker.lnk"
        
        echo.
        echo Uninstallation complete!
        echo.
        pause
        '@
        $script | Out-File -FilePath "release/EquipmentTracker/UNINSTALL.bat" -Encoding ASCII

    - name: Create README for installer
      run: |
        $readme = @'
        # Equipment Tracker - Windows Installer
        
        ## Installation Instructions
        
        ### Automatic Installation (Recommended)
        1. Run `INSTALL.bat` as Administrator
        2. Follow the prompts
        3. Launch from desktop shortcut or Start Menu
        
        ### Manual Installation
        1. Copy all files to your preferred location (e.g., `C:\Program Files\EquipmentTracker`)
        2. Run `EquipmentTracker.exe` to start the application
        
        ## System Requirements
        - Windows 10 or later
        - .NET Framework 4.8 (usually pre-installed)
        - 50MB free disk space
        
        ## First Run
        - The application will create a database file automatically
        - No additional configuration required
        - Data is stored in: `%USERPROFILE%\Documents\EquipmentTracker`
        
        ## Uninstallation
        Run `UNINSTALL.bat` as Administrator to remove the application.
        Your data files will be preserved.
        
        ## Support
        For issues or questions, visit the repository Issues page.
        '@
        $readme | Out-File -FilePath "release/INSTALLATION_README.txt" -Encoding UTF8

    - name: Get release info
      id: release_info
      shell: pwsh
      run: |
        $ref = "${{ github.ref_name }}"
        if ([string]::IsNullOrWhiteSpace($ref) -or $ref -eq "master" -or $ref -eq "main") {
          $version = "v1.0.0-manual"
        } else {
          $version = $ref
        }
        echo "artifact_name=EquipmentTracker-Windows-x64-$version.zip" >> $env:GITHUB_OUTPUT
        echo "version_display=$version" >> $env:GITHUB_OUTPUT

    - name: Create release package
      shell: pwsh
      run: |
        if (-not (Test-Path "release\EquipmentTracker\EquipmentTracker.exe")) { Write-Error "Packaging aborted: exe missing in release directory" }
        Compress-Archive -Path "release/*" -DestinationPath "${{ steps.release_info.outputs.artifact_name }}"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.release_info.outputs.artifact_name }}
        name: Equipment Tracker ${{ steps.release_info.outputs.version_display }}
        body: |
          ## Equipment Tracker ${{ steps.release_info.outputs.version_display }}

          ### üì¶ Installation
          1. Download `${{ steps.release_info.outputs.artifact_name }}`
          2. Extract to a temporary folder
          3. Run `INSTALL.bat` as Administrator for automatic installation
          4. Or manually copy files to your preferred location

          ### ‚ú® Features
          - Complete equipment inventory management
          - SQLite database with transaction logging
          - CSV import/export functionality
          - Light/Dark theme support
          - Backup and restore capabilities

          ### üîß System Requirements
          - Windows 10 or later
          - .NET Framework 4.8 (pre-installed on most systems)
          - 50MB free disk space

          ### üìù Notes
          - Run as Administrator for system-wide installation
          - Desktop shortcut will be created automatically
          - Data files stored in `Documents\EquipmentTracker`
          - Use `UNINSTALL.bat` to remove (data preserved)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}