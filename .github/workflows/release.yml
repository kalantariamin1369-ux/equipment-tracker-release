name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore
        run: |
          nuget restore "EquipmentTracker/EquipmentTracker.sln" -PackagesDirectory packages
          msbuild "EquipmentTracker/EquipmentTracker.sln" /t:Restore /p:RestorePackagesConfig=true /p:SolutionDir="${{ github.workspace }}\\"

      - name: Build (Release)
        run: msbuild "EquipmentTracker/EquipmentTracker.csproj" /t:Build /p:Configuration=Release

      - name: Verify output
        shell: pwsh
        run: |
          $exe = "EquipmentTracker\\bin\\Release\\EquipmentTracker.exe"
          if (-not (Test-Path $exe)) { throw "Missing exe: $exe" }

      - name: Preinstall step
        shell: pwsh
        run: |
          powershell -NoProfile -ExecutionPolicy Bypass -File "build/installer/preinstall.ps1" -BuildOutput "EquipmentTracker\\bin\\Release" -ReleaseDir "release\\EquipmentTracker"

      - name: Compute version & payload path
        id: ver
        shell: pwsh
        run: |
          if ("${{ github.ref }}" -like "refs/tags/*") { $v = "${{ github.ref_name }}" } else { $v = "v1.0.4" }
          $payload = Join-Path "${{ github.workspace }}" "release/EquipmentTracker"
          echo "value=$v" >> $env:GITHUB_OUTPUT
          echo "payload=$payload" >> $env:GITHUB_OUTPUT

      - name: Portable zip
        shell: pwsh
        run: |
          Compress-Archive -Path "release/*" -DestinationPath "EquipmentTracker-Portable-x64-${{ steps.ver.outputs.value }}.zip"

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Build installer
        shell: pwsh
        run: |
          $payload = "${{ steps.ver.outputs.payload }}"
          & "C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe" "/DBuildPayload=$payload" build/installer/EquipmentTracker.iss

      - name: Collect artifacts
        id: paths
        shell: pwsh
        run: |
          $tag = "${{ steps.ver.outputs.value }}"
          echo "portable=EquipmentTracker-Portable-x64-$tag.zip" >> $env:GITHUB_OUTPUT
          if (-not (Test-Path "dist")) { throw "dist not found" }
          dir dist
          $setup = Get-ChildItem dist -Filter "EquipmentTracker-Setup-x64-*.exe" | Select-Object -First 1
          if (-not $setup) { throw "installer not found" }
          echo "setup=$($setup.FullName)" >> $env:GITHUB_OUTPUT

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.value }}
          files: |
            ${{ steps.paths.outputs.portable }}
            ${{ steps.paths.outputs.setup }}
          name: Equipment Tracker ${{ steps.ver.outputs.value }}
          body: |
            ## Equipment Tracker ${{ steps.ver.outputs.value }}

            - Setup and Portable builds
            - Requirements: Windows 10+, .NET Framework 4.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
